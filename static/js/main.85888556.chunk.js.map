{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactsItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","itemContact","id","shortid","generate","props","addContact","reset","onSubmit","this","className","styles","contactForm","type","onChange","placeholder","Component","ContactsItem","onDelete","item","itemName","onClick","itemBtn","ContactsList","contacts","map","Filter","length","filter","App","filteredContacts","contact","toLowerCase","includes","deleteContactById","updatedContacts","alert","newName","trim","localStorage","getItem","JSON","parse","console","log","prevProps","prevState","setItem","stringify","contactsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85888556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3g12o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3XKsP\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const itemContact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n    this.props.addContact(itemContact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Enter Name...\"\n          />\n        </label>\n\n        <label>\n          Number:\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            placeholder=\"Enter Number...\"\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactsItem = ({ name, number, onDelete }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.itemName}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDelete} className={styles.itemBtn}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsItem from '../ContactsItem/ContactsItem';\n\nconst ContactsList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <ContactsItem\n        key={id}\n        name={name}\n        number={number}\n        onDelete={() => onDelete(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    PropTypes.array,\n  ]),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ length, filter, handleChange }) => {\n  return (\n    <>\n      {length > 1 && (\n        <label>\n          Find contacts by name\n          <br />\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleChange}\n            placeholder=\"Enter name...\"\n          />\n        </label>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  length: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactsList from './ContactsList/ContactsList';\nimport Filter from './Filter/Filter';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  filteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContactById = id => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = contact => {\n    if (!contact.name || !contact.number) {\n      alert('Enter Name and Number to add contact');\n      return false;\n    }\n    const newName = contact.name;\n    const isExistName = this.state.contacts.map(contact =>\n      contact.name.toLowerCase(),\n    );\n    if (isExistName.includes(newName.toLowerCase().trim())) {\n      alert(`${newName} already in contacts`);\n    } else {\n      this.setState(state => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('contacts')) {\n      this.setState({\n        contacts: [...JSON.parse(localStorage.getItem('contacts'))],\n      });\n    }\n    console.log('DidMount');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    console.log('DidUpdate');\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const contactsList = this.filteredContacts();\n\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h1>Contacts</h1>\n        <Filter\n          length={contacts.length}\n          filter={filter}\n          handleChange={this.handleChange}\n        />\n        <ContactsList\n          contacts={contactsList}\n          onDelete={this.deleteContactById}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2eXsb\",\"itemName\":\"ContactListItem_itemName__1tzi1\",\"itemBtn\":\"ContactListItem_itemBtn__hwwVg\"};"],"sourceRoot":""}